CREATE TABLE users (
	id SERIAL PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	email VARCHAR(30) NOT NULL,
	password VARCHAR NOT NULL,
	picture VARCHAR(100),
	role TEXT NOT NULL DEFAULT 'user',
	refresh_token TEXT DEFAULT '',
	created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CHECK(role IN ('user', 'creator')),
	UNIQUE(email, password)
);

CREATE TABLE recipes (
	id SERIAL PRIMARY KEY,
	title VARCHAR(50) NOT NULL,
	ingredient VARCHAR NOT NULL,
	video_id INT,
	creator_id INT,
	liker_id INT,
	conservator_id INT,
	created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE videos (
	id SERIAL PRIMARY KEY,
	title VARCHAR(50) NOT NULL,
	url VARCHAR(100) NOT NULL,
	recipe_id INT,
	created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE likers (
	id SERIAL PRIMARY KEY,
	user_id INT,
	recipe_id INT,
	created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE conservators (
	id SERIAL PRIMARY KEY,
	user_id INT,
	recipe_id INT,
	created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

ALTER TABLE recipes
ADD CONSTRAINT video FOREIGN KEY(video_id) REFERENCES videos(id) ON UPDATE CASCADE ON DELETE SET NULL,
ADD	CONSTRAINT creator FOREIGN KEY(creator_id) REFERENCES users(id) ON UPDATE CASCADE ON DELETE SET NULL,
ADD	CONSTRAINT liker FOREIGN KEY(liker_id) REFERENCES likers(id) ON UPDATE CASCADE ON DELETE SET NULL,
ADD	CONSTRAINT conservator FOREIGN KEY(conservator_id) REFERENCES conservators(id) ON UPDATE CASCADE ON DELETE SET NULL;

ALTER TABLE videos
ADD CONSTRAINT recipe FOREIGN KEY(recipe_id) REFERENCES recipes(id) ON UPDATE CASCADE ON DELETE SET NULL;

ALTER TABLE likers
ADD CONSTRAINT likedBy FOREIGN KEY(user_id) REFERENCES users(id) ON UPDATE CASCADE ON DELETE SET NULL,
ADD	CONSTRAINT liked FOREIGN KEY(recipe_id) REFERENCES recipes(id) ON UPDATE CASCADE ON DELETE SET NULL;

ALTER TABLE conservators
ADD CONSTRAINT bookmarkedBy FOREIGN KEY(user_id) REFERENCES users(id) ON UPDATE CASCADE ON DELETE SET NULL,
ADD	CONSTRAINT bookmarked FOREIGN KEY(recipe_id) REFERENCES recipes(id) ON UPDATE CASCADE ON DELETE SET NULL;

CREATE OR REPLACE FUNCTION trigger_set_timestamp()
RETURNS TRIGGER AS
'
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
'
LANGUAGE plpgsql;

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON users
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON recipes
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON videos
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON likers
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON conservators
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();
